#include "bits/stdc++.h"
using namespace std;
const int N = 1e5 + 10,M = 1e6 + 10;
struct Edge {
    int nt,to;
}e[M];
int he[N],fa[N][20],dep[N],d[N];
int idx,ans;
int n,m;
void add(int a,int b)
{
    e[++idx] = {he[a],b};
    he[a] = idx;
}
void dfs1(int u,int fat)
{
    dep[u] = dep[fat] + 1;
    for(int i = 1;(1 << i) <= dep[u];i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];
    for(int i = he[u];~i;i = e[i].nt) {
        if(e[i].to == fat) continue;
        fa[e[i].to][0] = u;
        dfs1(e[i].to,u);
    }
}
int dfs2(int u,int fat)
{
    int res = d[u];
    for(int i = he[u];~i;i = e[i].nt) {
        if(e[i].to == fat) continue;
        int s = dfs2(e[i].to,u);
        if(s == 0) ans += m;
        else if(s == 1) ans ++;
        res += s;
    }
    return res;
}
int lca(int x,int y)
{
    if(dep[x] < dep[y]) swap(x,y);
    for(int i = 17;i >= 0;i--) if(dep[fa[x][i]] >= dep[y]) x = fa[x][i];
    if(x == y) return x;
    for(int i = 17;i >= 0;i--) if(fa[x][i] != fa[y][i]) x = fa[x][i],y = fa[y][i];
    return fa[x][0];
}
int main()
{
    cin >> n >> m;
    memset(he,-1,sizeof(he));
    for(int i = 1;i < n;i++) {
        int a,b;
        cin >> a >> b;
        add(a,b);add(b,a);
    }
    dfs1(1,0);
    for(int i = 1;i <= m;i++) {
        int a,b;
        cin >> a >> b;
        int p = lca(a,b);
        d[a] ++,d[b] ++ ;
        d[p] -= 2;
    }
    dfs2(1,0);
    cout << ans << endl;
    return 0;
}
